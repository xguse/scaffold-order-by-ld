"""Snakemake file."""

# See tutorial at: http://tiny.cc/snakemake_tutorial

import os

import yaml

import pandas as pd
import numpy as np

from matplotlib import pyplot as plt
import seaborn as sns
sns.set_style("whitegrid")

from python.functions import *

ORIGINAL_CONFIG_AS_STRING = yaml.dump(config, default_flow_style=False)


#### COMMON RUN SPECIFICS ####

RUN_NAME = config["COMMON"]["RUN_NAME"]
OUT_DIR = "{base_dir}/{run_name}".format(base_dir=config["COMMON"]["OUT_DIR_LOCATION"], run_name=RUN_NAME)
LOGS_DIR = OUT_DIR+"/logs"



############ BEGIN PIPELINE RULES ############


#### SAVE_RUN_CONFIG ####
SAVE_RUN_CONFIG_OUT = OUT_DIR+"/{RUN_NAME}.yaml".format(RUN_NAME=RUN_NAME)

rule save_run_config:
    input:
    output:
        file=SAVE_RUN_CONFIG_OUT

    run:
        with open(output.file, 'w') as cnf_out:
            cnf_out.write(ORIGINAL_CONFIG_AS_STRING)

# ------------------------- #
#### MAKE_ENDS_BED ####
MAKE_ENDS_BED = config["MAKE_ENDS_BED"]

# log
LOG_MAKE_ENDS_BED = LOGS_DIR+"/make_ends_bed.log"

# params
ENDS_LENGTH = MAKE_ENDS_BED["ENDS_LENGTH"]

# input
SCAFFOLD_FASTA = MAKE_ENDS_BED["SCAFFOLD_FASTA"]

# output
MAKE_ENDS_BED_DIR = OUT_DIR+"/make_ends_bed"
BED_PATH = MAKE_ENDS_BED_DIR+"/scaffold_ends.bed"

# ---
rule make_ends_bed:
    log:
        path=LOG_MAKE_ENDS_BED

    params:
        window=ENDS_LENGTH,

    input:
        fasta_path=SCAFFOLD_FASTA,

    output:
        bed_path=BED_PATH,


    script:
        "python/scripts/make_ends_bed.py"


# ------------------------- #



# ------------------------- #




#### ALL ####
input_all = [rules.make_ends_bed.output,
             ]
# ---
rule all:
    input:
        [rules.save_run_config.output] + input_all
